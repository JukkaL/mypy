[1mdiff --git a/mypy/checker.py b/mypy/checker.py[m
[1mindex c65f956..8600902 100644[m
[1m--- a/mypy/checker.py[m
[1m+++ b/mypy/checker.py[m
[36m@@ -2350,7 +2350,7 @@[m [mclass TypeChecker(NodeVisitor[None]):[m
         the name refers to a compatible generic type.[m
         """[m
         info = self.lookup_typeinfo(name)[m
[31m-        # TODO: assert len(args) == len(info.defn.type_vars)[m
[32m+[m[32m        assert len(args) == len(info.defn.type_vars)[m
         return Instance(info, args)[m
 [m
     def lookup_typeinfo(self, fullname: str) -> TypeInfo:[m
[1mdiff --git a/mypy/semanal.py b/mypy/semanal.py[m
[1mindex e7db2c2..ecfda19 100644[m
[1m--- a/mypy/semanal.py[m
[1m+++ b/mypy/semanal.py[m
[36m@@ -1066,7 +1066,7 @@[m [mclass SemanticAnalyzer(NodeVisitor):[m
         node = sym.node[m
         assert isinstance(node, TypeInfo)[m
         if args:[m
[31m-            # TODO: assert len(args) == len(node.defn.type_vars)[m
[32m+[m[32m            assert len(args) == len(node.defn.type_vars)[m
             return Instance(node, args)[m
         return Instance(node, [AnyType()] * len(node.defn.type_vars))[m
 [m
[36m@@ -1077,7 +1077,7 @@[m [mclass SemanticAnalyzer(NodeVisitor):[m
         node = sym.node[m
         assert isinstance(node, TypeInfo)[m
         if args:[m
[31m-            # TODO: assert len(args) == len(node.defn.type_vars)[m
[32m+[m[32m            assert len(args) == len(node.defn.type_vars)[m
             return Instance(node, args)[m
         return Instance(node, [AnyType()] * len(node.defn.type_vars))[m
 [m
[36m@@ -3685,7 +3685,7 @@[m [mclass ThirdPass(TraverserVisitor):[m
         node = sym.node[m
         assert isinstance(node, TypeInfo)[m
         if args:[m
[31m-            # TODO: assert len(args) == len(node.defn.type_vars)[m
[32m+[m[32m            assert len(args) == len(node.defn.type_vars)[m
             return Instance(node, args)[m
         return Instance(node, [AnyType()] * len(node.defn.type_vars))[m
 [m
