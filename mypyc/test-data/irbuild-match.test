[case testMatchDefaultCase_python3_10]
def f():
    match True:
        case _:
            print("matched")
[out]
def f():
    r0 :: str
    r1 :: object
    r2 :: str
    r3 :: object
    r4 :: object[1]
    r5 :: object_ptr
    r6, r7 :: object
L0:
L1:
    r0 = 'matched'
    r1 = builtins :: module
    r2 = 'print'
    r3 = CPyObject_GetAttr(r1, r2)
    r4 = [r0]
    r5 = load_address r4
    r6 = _PyObject_Vectorcall(r3, r5, 1, 0)
    keep_alive r0
L2:
    r7 = box(None, 1)
    return r7
[case testMatchBasicValue_python3_10]
def f():
    match 123:
        case 123:
            print("matched")
[out]
def f():
    r0 :: bit
    r1 :: object
    r2 :: int32
    r3 :: bit
    r4 :: bool
    r5 :: str
    r6 :: object
    r7 :: str
    r8 :: object
    r9 :: object[1]
    r10 :: object_ptr
    r11, r12 :: object
L0:
    r0 = 246 == 246
    r1 = box(bit, r0)
    r2 = PyObject_IsTrue(r1)
    r3 = r2 >= 0 :: signed
    r4 = truncate r2: int32 to builtins.bool
    if r4 goto L1 else goto L2 :: bool
L1:
    r5 = 'matched'
    r6 = builtins :: module
    r7 = 'print'
    r8 = CPyObject_GetAttr(r6, r7)
    r9 = [r5]
    r10 = load_address r9
    r11 = _PyObject_Vectorcall(r8, r10, 1, 0)
    keep_alive r5
    goto L3
L2:
L3:
    r12 = box(None, 1)
    return r12
