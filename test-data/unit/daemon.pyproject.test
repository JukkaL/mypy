-- End-to-end test cases for the daemon (dmypy).
-- These are special because they run multiple shell commands.

[case testDaemonIgnoreConfigFilesPyprojectTOMLPyprojectTOML]
$ dmypy start -- --follow-imports=error
Daemon started
[file pyproject.toml]
\[tool.mypy]
files = "./foo.py"

[case testDaemonRunRestartPluginVersionPyprojectTOMLPyprojectTOML]
$ dmypy run -- foo.py --no-error-summary
Daemon started
$ {python} -c "print(' ')" >> plug.py
$ dmypy run -- foo.py --no-error-summary
Restarting: plugins changed
Daemon stopped
Daemon started
$ dmypy stop
Daemon stopped
[file pyproject.toml]
\[tool.mypy]
follow_imports = "error"
plugins = "plug.py"
[file foo.py]
pass
[file plug.py]
from mypy.plugin import Plugin
class Dummy(Plugin): pass
def plugin(version): return Dummy

[case testDaemonRunRestartGlobsPyprojectTOMLPyprojectTOML]
-- Ensure dmypy is not restarted if the configuration doesn't change and it contains globs
-- Note: Backslash path separator in output is replaced with forward slash so the same test succeeds on Windows as well
$ dmypy run -- foo --follow-imports=error --python-version=3.6
Daemon started
foo/lol.py:1: error: Name 'fail' is not defined
Found 1 error in 1 file (checked 3 source files)
== Return code: 1
$ dmypy run -- foo --follow-imports=error --python-version=3.6
foo/lol.py:1: error: Name 'fail' is not defined
Found 1 error in 1 file (checked 3 source files)
== Return code: 1
$ {python} -c "print('[mypy]')" >mypy.ini
$ {python} -c "print('ignore_errors=True')" >>mypy.ini
$ dmypy run -- foo --follow-imports=error --python-version=3.6
Restarting: configuration changed
Daemon stopped
Daemon started
Success: no issues found in 3 source files
$ dmypy stop
Daemon stopped
[file pyproject.toml]
\[tool.mypy]
ignore_errors = true
\[tool.'mypy-*.lol']
ignore_errors = false

[file foo/__init__.py]
[file foo/lol.py]
fail
[file foo/ok.py]
a: int = 1
