[case testErrorCodesAssignToMethodViaClass]
# flags: --no-strict-optional --show-error-codes
import typing
class A:
    def f(self): pass
A.f = None # E: cannot_assign_to_method: Cannot assign to a method

[case testErrorCodesNoReturnValueExpected]
# flags: --no-strict-optional --show-error-codes
from typing import Generator
def f() -> Generator[int, None, None]:
    yield 1
    return 42  # E: no_return_value_expected: No return value expected
[out]

[case testErrorCodesIncompatibleTypevar]
# flags: --no-strict-optional --show-error-codes
from typing import TypeVar, Union
AnyStr = TypeVar('AnyStr', bytes, str)
def f(x: Union[AnyStr, int], *a: AnyStr) -> None: pass
f('foo', b'bar') # E: incompatible_typevar_value: Value of type variable "AnyStr" of "f" cannot be "object"
