-- Type checker test cases for conditional checks that result in some
-- expressions classified as redundant.

[case testRedundantExpressions]
# flags: --warn-redundant-expr
def foo() -> bool: ...

lst = [1, 2, 3, 4]

b = False or foo()                       # E: Left operand of 'or' is always false
c = True and foo()                       # E: Left operand of 'and' is always true
g = 3 if True else 4                     # E: If condition is always true
h = 3 if False else 4                    # E: If condition is always false
i = [x for x in lst if True]             # E: If condition in comprehension is always true
j = [x for x in lst if False]            # E: If condition in comprehension is always false
k = [x for x in lst if isinstance(x, int) or foo()]  # E: If condition in comprehension is always true
[builtins fixtures/isinstancelist.pyi]
