[case testInExhaustiveChecking]

[builtins fixtures/tuple.pyi]
from typing_extensions import NoReturn
from enum import Enum
from typing_extensions import assert_never

class MyEnum(Enum):
    A = 1
    B = 2
    C = 3

def test_function(a: MyEnum) -> bool:
    if a == MyEnum.A:
        return True
    elif a in (MyEnum.B, MyEnum.C):
        return False
    assert_never(a)

test_function(MyEnum.A)
# E: Argument 1 to "assert_never" has incompatible type "Literal[MyEnum.B, MyEnum.C]"; expected "NoReturn"
