-- Type checker test cases dealing with modules and imports on case-insensitive filesystems.

[case testCaseInsensitivityDirPyprojectTOML]
# flags: --config-file tmp/pyproject.toml

from a import B  # E: Module "a" has no attribute "B"
from other import x
reveal_type(x)  # N: Revealed type is "builtins.int"

[file a/__init__.py]
[file a/b/__init__.py]
[file FuNkY_CaSe/other.py]
x = 1

[file pyproject.toml]
\[tool.mypy]
mypy_path = "tmp/funky_case"

[case testPreferPackageOverFileCasePyprojectTOML]
# flags: --config-file tmp/pyproject.toml
import a
[file funky/a.py]
/  # Deliberate syntax error, this file should not be parsed.
[file FuNkY/a/__init__.py]
pass

[file pyproject.toml]
\[tool.mypy]
mypy_path = "tmp/funky"

[case testNamespacePackagePickFirstOnMypyPathCasePyprojectTOML]
# flags: --namespace-packages --config-file tmp/pyproject.toml
from foo.bar import x
reveal_type(x)  # N: Revealed type is "builtins.int"
[file XX/foo/bar.py]
x = 0
[file yy/foo/bar.py]
x = ''
[file pyproject.toml]
\[tool.mypy]
mypy_path = "tmp/xx,tmp/yy"

[case testClassicPackageInsideNamespacePackageCasePyprojectTOML]
# flags: --namespace-packages --config-file tmp/pyproject.toml
from foo.bar.baz.boo import x
reveal_type(x)  # N: Revealed type is "builtins.int"
[file xx/foo/bar/baz/boo.py]
x = ''
[file xx/foo/bar/baz/__init__.py]
[file yy/foo/bar/baz/boo.py]
x = 0
[file yy/foo/bar/__init__.py]

[file pyproject.toml]
\[tool.mypy]
mypy_path = "TmP/xX,TmP/yY"
