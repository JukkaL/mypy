[case testPEP695TypeAlias]
# mypy: enable-incomplete-feature=NewGenericSyntax
type A[T] = C[T]
[out]
MypyFile:1(
  TypeAliasStmt:2(
    NameExpr(A)
    TypeParam(
      T)
    IndexExpr:2(
      NameExpr(C)
      NameExpr(T))))

[case testPEP695GenericFunction]
# mypy: enable-incomplete-feature=NewGenericSyntax

def f[T](): pass
def g[T: str](): pass
def h[T: (int, str)](): pass
[out]
MypyFile:1(
  FuncDef:3(
    f
    TypeParam(
      T)
    Block:3(
      PassStmt:3()))
  FuncDef:4(
    g
    TypeParam(
      T
      str?)
    Block:4(
      PassStmt:4()))
  FuncDef:5(
    h
    TypeParam(
      T
      Values(
        int?
        str?))
    Block:5(
      PassStmt:5())))
